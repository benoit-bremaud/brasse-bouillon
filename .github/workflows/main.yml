name: Brasse-Bouillon CI/CD

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📅 Checkout du code
        uses: actions/checkout@v3

      - name: 🛠️ Installer Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Cache pour backend
      - name: ♻️ Cache npm backend
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-node-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-backend-

      - name: 📦 Installer les dépendances backend
        working-directory: ./backend
        run: npm ci

      - name: 🧹 Lint backend
        working-directory: ./backend
        run: npm run lint

      - name: 🧪 Test backend
        working-directory: ./backend
        run: npm run test

      # Cache pour frontend
      - name: ♻️ Cache npm frontend
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-frontend-

      - name: 📦 Installer les dépendances frontend
        working-directory: ./frontend
        run: npm ci

      - name: 🧹 Lint frontend
        working-directory: ./frontend
        run: npm run lint

      - name: 🧪 Test frontend
        working-directory: ./frontend
        run: npm run test
      
      # - name: 🛠️ Build frontend (désactivé pour MVP)
      #   working-directory: ./frontend
      #   run: npm run build
      
  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: 🚀 Déploiement simulé
        run: echo "🚧 Déploiement non actif (en phase de dev)"
